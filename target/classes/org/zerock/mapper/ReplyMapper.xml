<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "org.zerock.mapper.ReplyMapper">

<insert id = "insert">
	insert into review (order_detail_code, review_comment, review_score) 
	values (#{order_detail_code}, #{review_comment}, #{review_score})
</insert>

<select id = "read" resultType = "org.zerock.domain.ReplyVO">
	select r.review_code, r.review_date, r.review_comment, r.review_score, r.order_detail_code, od.product_code, c.customer_code, c.customer_name
	from review as r join order_detail as od on r.order_detail_code = od.order_detail_code
    inner join `order` as o on od.order_code = o.order_code
    inner join customer as c on c.customer_code = o.customer_code
	where r.review_code = #{review_code};
</select>

<delete id = "delete">
	delete from review where review_code = #{review_code}
</delete>

<update id = "update">
	update review set review_comment = #{review_comment}, review_score = #{review_score} where review_code = #{review_code}
</update>

<!--product_code @param("customer_id") int customer_id 와 연결 -->
<select id = "getListWIthPaging" resultType = "org.zerock.domain.ReplyVO">
	<![CDATA[
		set @rownum := 0;
        select * from (
        select @rownum:=@rownum+1 rownum, r.review_code, r.review_date, r.review_comment, r.review_score, od.order_detail_code, od.product_code, o.customer_code, c.customer_name
		from review as r join order_detail as od
		on r.order_detail_code = od.order_detail_code
        inner join `order` as o on od.order_code = o.order_code
        inner join customer as c on o.customer_code = c.customer_code,
		(SELECT @rownum:=0) Tmp
        where od.product_code = #{product_code} and r.review_code > 0 and @rownum < #{cri.pageNum} * #{cri.amount}) a where a.rownum > (#{cri.pageNum} -1) * #{cri.amount}
	]]>
</select>


<select id = "getCountByProductCode" resultType = "int">
	<![CDATA[
		select count(r.review_code) from review as r join order_detail as od on r.order_detail_code = od.order_detail_code where od.product_code = #{product_code}
	]]>
</select>

<select id = "getOrderDetailCode" resultType = "integer">
	<![CDATA[
		 select od.order_detail_code from order_detail as od join `order` as o on o.order_code = od.order_code 
   		 where o.order_code in (select order_code from `order` where customer_code = #{customer_code}) and o.order_status = "done" and od.product_code = #{product_code} 
   		 order by od.order_detail_code desc limit 1;
	]]>
</select>

<select id = "getReviewList" resultType = "HashMap">
	<![CDATA[
		  select r.review_code from review as r join order_detail as od on od.order_detail_code = r.order_detail_code
  		  inner join `order` as o on o.order_code = od.order_code
  		  inner join customer as c on c.customer_code = o.customer_code
  		  where o.customer_code = #{customer_code} and od.product_code = #{product_code}
	]]>
</select>

<select id = "getScore" resultType = "Integer">
	select ROUND(AVG(r.review_score)) 
	from review as r join order_detail as od on r.order_detail_code = od.order_detail_code where od.product_code = #{product_code};
</select>

</mapper>